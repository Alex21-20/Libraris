{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Задание 1. Посчитать основные статистики по каждому признаку (минимальные, максимальные, средние значения). Сделать выводы об адекватности этих статистик."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>DistrictId</th>\n",
       "      <th>Rooms</th>\n",
       "      <th>Square</th>\n",
       "      <th>LifeSquare</th>\n",
       "      <th>KitchenSquare</th>\n",
       "      <th>Floor</th>\n",
       "      <th>HouseFloor</th>\n",
       "      <th>HouseYear</th>\n",
       "      <th>Ecology_1</th>\n",
       "      <th>Ecology_2</th>\n",
       "      <th>Ecology_3</th>\n",
       "      <th>Social_1</th>\n",
       "      <th>Social_2</th>\n",
       "      <th>Social_3</th>\n",
       "      <th>Healthcare_1</th>\n",
       "      <th>Helthcare_2</th>\n",
       "      <th>Shops_1</th>\n",
       "      <th>Shops_2</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11809</td>\n",
       "      <td>27</td>\n",
       "      <td>3.00000</td>\n",
       "      <td>115.02731</td>\n",
       "      <td>nan</td>\n",
       "      <td>10.00000</td>\n",
       "      <td>4</td>\n",
       "      <td>10.00000</td>\n",
       "      <td>2014</td>\n",
       "      <td>0.07542</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>11</td>\n",
       "      <td>3097</td>\n",
       "      <td>0</td>\n",
       "      <td>nan</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>B</td>\n",
       "      <td>305018.87109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3013</td>\n",
       "      <td>22</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>39.83252</td>\n",
       "      <td>23.16922</td>\n",
       "      <td>8.00000</td>\n",
       "      <td>7</td>\n",
       "      <td>8.00000</td>\n",
       "      <td>1966</td>\n",
       "      <td>0.11854</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>30</td>\n",
       "      <td>6207</td>\n",
       "      <td>1</td>\n",
       "      <td>1183.00000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>B</td>\n",
       "      <td>177734.55341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8215</td>\n",
       "      <td>1</td>\n",
       "      <td>3.00000</td>\n",
       "      <td>78.34222</td>\n",
       "      <td>47.67197</td>\n",
       "      <td>10.00000</td>\n",
       "      <td>2</td>\n",
       "      <td>17.00000</td>\n",
       "      <td>1988</td>\n",
       "      <td>0.02561</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>33</td>\n",
       "      <td>5261</td>\n",
       "      <td>0</td>\n",
       "      <td>240.00000</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>B</td>\n",
       "      <td>282078.72085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2352</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>40.40991</td>\n",
       "      <td>nan</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>10</td>\n",
       "      <td>22.00000</td>\n",
       "      <td>1977</td>\n",
       "      <td>0.00712</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>1</td>\n",
       "      <td>264</td>\n",
       "      <td>0</td>\n",
       "      <td>nan</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>B</td>\n",
       "      <td>168106.00763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13866</td>\n",
       "      <td>94</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>64.28507</td>\n",
       "      <td>38.56252</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>16</td>\n",
       "      <td>16.00000</td>\n",
       "      <td>1972</td>\n",
       "      <td>0.28280</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>33</td>\n",
       "      <td>8667</td>\n",
       "      <td>2</td>\n",
       "      <td>nan</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>B</td>\n",
       "      <td>343995.10296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9995</th>\n",
       "      <td>1260</td>\n",
       "      <td>61</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>49.09073</td>\n",
       "      <td>33.27263</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>3</td>\n",
       "      <td>12.00000</td>\n",
       "      <td>1981</td>\n",
       "      <td>0.30032</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>52</td>\n",
       "      <td>10311</td>\n",
       "      <td>6</td>\n",
       "      <td>nan</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>B</td>\n",
       "      <td>119367.45580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9996</th>\n",
       "      <td>16265</td>\n",
       "      <td>27</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>64.30768</td>\n",
       "      <td>37.03842</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>13</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1977</td>\n",
       "      <td>0.07216</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>2</td>\n",
       "      <td>629</td>\n",
       "      <td>1</td>\n",
       "      <td>nan</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>199715.14881</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9997</th>\n",
       "      <td>2795</td>\n",
       "      <td>178</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>29.64806</td>\n",
       "      <td>16.55536</td>\n",
       "      <td>5.00000</td>\n",
       "      <td>3</td>\n",
       "      <td>5.00000</td>\n",
       "      <td>1958</td>\n",
       "      <td>0.46056</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>20</td>\n",
       "      <td>4386</td>\n",
       "      <td>14</td>\n",
       "      <td>nan</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>B</td>\n",
       "      <td>165953.91258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9998</th>\n",
       "      <td>14561</td>\n",
       "      <td>21</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>32.33029</td>\n",
       "      <td>22.32687</td>\n",
       "      <td>5.00000</td>\n",
       "      <td>3</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>1969</td>\n",
       "      <td>0.19449</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>47</td>\n",
       "      <td>8004</td>\n",
       "      <td>3</td>\n",
       "      <td>125.00000</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>B</td>\n",
       "      <td>171842.41185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999</th>\n",
       "      <td>7202</td>\n",
       "      <td>94</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>35.81548</td>\n",
       "      <td>22.30137</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>9</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>1975</td>\n",
       "      <td>0.12738</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>43</td>\n",
       "      <td>8429</td>\n",
       "      <td>3</td>\n",
       "      <td>nan</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>B</td>\n",
       "      <td>177685.62749</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10000 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Id  DistrictId   Rooms    Square  LifeSquare  KitchenSquare  Floor  \\\n",
       "0     11809          27 3.00000 115.02731         nan       10.00000      4   \n",
       "1      3013          22 1.00000  39.83252    23.16922        8.00000      7   \n",
       "2      8215           1 3.00000  78.34222    47.67197       10.00000      2   \n",
       "3      2352           1 1.00000  40.40991         nan        1.00000     10   \n",
       "4     13866          94 2.00000  64.28507    38.56252        9.00000     16   \n",
       "...     ...         ...     ...       ...         ...            ...    ...   \n",
       "9995   1260          61 2.00000  49.09073    33.27263        6.00000      3   \n",
       "9996  16265          27 2.00000  64.30768    37.03842        9.00000     13   \n",
       "9997   2795         178 1.00000  29.64806    16.55536        5.00000      3   \n",
       "9998  14561          21 1.00000  32.33029    22.32687        5.00000      3   \n",
       "9999   7202          94 1.00000  35.81548    22.30137        6.00000      9   \n",
       "\n",
       "      HouseFloor  HouseYear  Ecology_1 Ecology_2 Ecology_3  Social_1  \\\n",
       "0       10.00000       2014    0.07542         B         B        11   \n",
       "1        8.00000       1966    0.11854         B         B        30   \n",
       "2       17.00000       1988    0.02561         B         B        33   \n",
       "3       22.00000       1977    0.00712         B         B         1   \n",
       "4       16.00000       1972    0.28280         B         B        33   \n",
       "...          ...        ...        ...       ...       ...       ...   \n",
       "9995    12.00000       1981    0.30032         B         B        52   \n",
       "9996     0.00000       1977    0.07216         B         B         2   \n",
       "9997     5.00000       1958    0.46056         B         B        20   \n",
       "9998     9.00000       1969    0.19449         B         B        47   \n",
       "9999     9.00000       1975    0.12738         B         B        43   \n",
       "\n",
       "      Social_2  Social_3  Healthcare_1  Helthcare_2  Shops_1 Shops_2  \\\n",
       "0         3097         0           nan            0        0       B   \n",
       "1         6207         1    1183.00000            1        0       B   \n",
       "2         5261         0     240.00000            3        1       B   \n",
       "3          264         0           nan            0        1       B   \n",
       "4         8667         2           nan            0        6       B   \n",
       "...        ...       ...           ...          ...      ...     ...   \n",
       "9995     10311         6           nan            1        9       B   \n",
       "9996       629         1           nan            0        0       A   \n",
       "9997      4386        14           nan            1        5       B   \n",
       "9998      8004         3     125.00000            3        5       B   \n",
       "9999      8429         3           nan            3        9       B   \n",
       "\n",
       "            Price  \n",
       "0    305018.87109  \n",
       "1    177734.55341  \n",
       "2    282078.72085  \n",
       "3    168106.00763  \n",
       "4    343995.10296  \n",
       "...           ...  \n",
       "9995 119367.45580  \n",
       "9996 199715.14881  \n",
       "9997 165953.91258  \n",
       "9998 171842.41185  \n",
       "9999 177685.62749  \n",
       "\n",
       "[10000 rows x 20 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "pd.set_option('display.float_format', lambda x: '%.5f' % x)\n",
    "train = pd.read_csv('train.csv')\n",
    "train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>DistrictId</th>\n",
       "      <th>Rooms</th>\n",
       "      <th>Square</th>\n",
       "      <th>LifeSquare</th>\n",
       "      <th>KitchenSquare</th>\n",
       "      <th>Floor</th>\n",
       "      <th>HouseFloor</th>\n",
       "      <th>HouseYear</th>\n",
       "      <th>Ecology_1</th>\n",
       "      <th>Ecology_2</th>\n",
       "      <th>Ecology_3</th>\n",
       "      <th>Social_1</th>\n",
       "      <th>Social_2</th>\n",
       "      <th>Social_3</th>\n",
       "      <th>Healthcare_1</th>\n",
       "      <th>Helthcare_2</th>\n",
       "      <th>Shops_1</th>\n",
       "      <th>Shops_2</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>7887.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000</td>\n",
       "      <td>10000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>5202.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000</td>\n",
       "      <td>10000.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>2</td>\n",
       "      <td>nan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>B</td>\n",
       "      <td>nan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>9903</td>\n",
       "      <td>9725</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>nan</td>\n",
       "      <td>9175</td>\n",
       "      <td>nan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>8383.40770</td>\n",
       "      <td>50.40080</td>\n",
       "      <td>1.89050</td>\n",
       "      <td>56.31578</td>\n",
       "      <td>37.19964</td>\n",
       "      <td>6.27330</td>\n",
       "      <td>8.52670</td>\n",
       "      <td>12.60940</td>\n",
       "      <td>3990.16630</td>\n",
       "      <td>0.11886</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24.68700</td>\n",
       "      <td>5352.15740</td>\n",
       "      <td>8.03920</td>\n",
       "      <td>1142.90446</td>\n",
       "      <td>1.31950</td>\n",
       "      <td>4.23130</td>\n",
       "      <td>NaN</td>\n",
       "      <td>214138.85740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4859.01902</td>\n",
       "      <td>43.58759</td>\n",
       "      <td>0.83951</td>\n",
       "      <td>21.05873</td>\n",
       "      <td>86.24121</td>\n",
       "      <td>28.56092</td>\n",
       "      <td>5.24115</td>\n",
       "      <td>6.77597</td>\n",
       "      <td>200500.26143</td>\n",
       "      <td>0.11903</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.53261</td>\n",
       "      <td>4006.79980</td>\n",
       "      <td>23.83187</td>\n",
       "      <td>1021.51726</td>\n",
       "      <td>1.49360</td>\n",
       "      <td>4.80634</td>\n",
       "      <td>NaN</td>\n",
       "      <td>92872.29387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.13686</td>\n",
       "      <td>0.37062</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1910.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>168.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59174.77803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4169.50000</td>\n",
       "      <td>20.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>41.77488</td>\n",
       "      <td>22.76983</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>4.00000</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>1974.00000</td>\n",
       "      <td>0.01765</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>1564.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>350.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>153872.63394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>8394.50000</td>\n",
       "      <td>36.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>52.51331</td>\n",
       "      <td>32.78126</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>7.00000</td>\n",
       "      <td>13.00000</td>\n",
       "      <td>1977.00000</td>\n",
       "      <td>0.07542</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.00000</td>\n",
       "      <td>5285.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>900.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>3.00000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>192269.64488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>12592.50000</td>\n",
       "      <td>75.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>65.90063</td>\n",
       "      <td>45.12880</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>12.00000</td>\n",
       "      <td>17.00000</td>\n",
       "      <td>2001.00000</td>\n",
       "      <td>0.19578</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36.00000</td>\n",
       "      <td>7227.00000</td>\n",
       "      <td>5.00000</td>\n",
       "      <td>1548.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>249135.46217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>16798.00000</td>\n",
       "      <td>209.00000</td>\n",
       "      <td>19.00000</td>\n",
       "      <td>641.06519</td>\n",
       "      <td>7480.59213</td>\n",
       "      <td>2014.00000</td>\n",
       "      <td>42.00000</td>\n",
       "      <td>117.00000</td>\n",
       "      <td>20052011.00000</td>\n",
       "      <td>0.52187</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>74.00000</td>\n",
       "      <td>19083.00000</td>\n",
       "      <td>141.00000</td>\n",
       "      <td>4849.00000</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>23.00000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>633233.46657</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Id  DistrictId       Rooms      Square  LifeSquare  \\\n",
       "count  10000.00000 10000.00000 10000.00000 10000.00000  7887.00000   \n",
       "unique         nan         nan         nan         nan         nan   \n",
       "top            nan         nan         nan         nan         nan   \n",
       "freq           nan         nan         nan         nan         nan   \n",
       "mean    8383.40770    50.40080     1.89050    56.31578    37.19964   \n",
       "std     4859.01902    43.58759     0.83951    21.05873    86.24121   \n",
       "min        0.00000     0.00000     0.00000     1.13686     0.37062   \n",
       "25%     4169.50000    20.00000     1.00000    41.77488    22.76983   \n",
       "50%     8394.50000    36.00000     2.00000    52.51331    32.78126   \n",
       "75%    12592.50000    75.00000     2.00000    65.90063    45.12880   \n",
       "max    16798.00000   209.00000    19.00000   641.06519  7480.59213   \n",
       "\n",
       "        KitchenSquare       Floor  HouseFloor      HouseYear   Ecology_1  \\\n",
       "count     10000.00000 10000.00000 10000.00000    10000.00000 10000.00000   \n",
       "unique            nan         nan         nan            nan         nan   \n",
       "top               nan         nan         nan            nan         nan   \n",
       "freq              nan         nan         nan            nan         nan   \n",
       "mean          6.27330     8.52670    12.60940     3990.16630     0.11886   \n",
       "std          28.56092     5.24115     6.77597   200500.26143     0.11903   \n",
       "min           0.00000     1.00000     0.00000     1910.00000     0.00000   \n",
       "25%           1.00000     4.00000     9.00000     1974.00000     0.01765   \n",
       "50%           6.00000     7.00000    13.00000     1977.00000     0.07542   \n",
       "75%           9.00000    12.00000    17.00000     2001.00000     0.19578   \n",
       "max        2014.00000    42.00000   117.00000 20052011.00000     0.52187   \n",
       "\n",
       "       Ecology_2 Ecology_3    Social_1    Social_2    Social_3  Healthcare_1  \\\n",
       "count      10000     10000 10000.00000 10000.00000 10000.00000    5202.00000   \n",
       "unique         2         2         nan         nan         nan           nan   \n",
       "top            B         B         nan         nan         nan           nan   \n",
       "freq        9903      9725         nan         nan         nan           nan   \n",
       "mean         NaN       NaN    24.68700  5352.15740     8.03920    1142.90446   \n",
       "std          NaN       NaN    17.53261  4006.79980    23.83187    1021.51726   \n",
       "min          NaN       NaN     0.00000   168.00000     0.00000       0.00000   \n",
       "25%          NaN       NaN     6.00000  1564.00000     0.00000     350.00000   \n",
       "50%          NaN       NaN    25.00000  5285.00000     2.00000     900.00000   \n",
       "75%          NaN       NaN    36.00000  7227.00000     5.00000    1548.00000   \n",
       "max          NaN       NaN    74.00000 19083.00000   141.00000    4849.00000   \n",
       "\n",
       "        Helthcare_2     Shops_1 Shops_2        Price  \n",
       "count   10000.00000 10000.00000   10000  10000.00000  \n",
       "unique          nan         nan       2          nan  \n",
       "top             nan         nan       B          nan  \n",
       "freq            nan         nan    9175          nan  \n",
       "mean        1.31950     4.23130     NaN 214138.85740  \n",
       "std         1.49360     4.80634     NaN  92872.29387  \n",
       "min         0.00000     0.00000     NaN  59174.77803  \n",
       "25%         0.00000     1.00000     NaN 153872.63394  \n",
       "50%         1.00000     3.00000     NaN 192269.64488  \n",
       "75%         2.00000     6.00000     NaN 249135.46217  \n",
       "max         6.00000    23.00000     NaN 633233.46657  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_means = train.describe(include='all')\n",
    "train_means "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>DistrictId</th>\n",
       "      <th>Rooms</th>\n",
       "      <th>Square</th>\n",
       "      <th>LifeSquare</th>\n",
       "      <th>KitchenSquare</th>\n",
       "      <th>Floor</th>\n",
       "      <th>HouseFloor</th>\n",
       "      <th>HouseYear</th>\n",
       "      <th>Ecology_1</th>\n",
       "      <th>Social_1</th>\n",
       "      <th>Social_2</th>\n",
       "      <th>Social_3</th>\n",
       "      <th>Healthcare_1</th>\n",
       "      <th>Helthcare_2</th>\n",
       "      <th>Shops_1</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>7887.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>5202.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "      <td>10000.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>8383.40770</td>\n",
       "      <td>50.40080</td>\n",
       "      <td>1.89050</td>\n",
       "      <td>56.31578</td>\n",
       "      <td>37.19964</td>\n",
       "      <td>6.27330</td>\n",
       "      <td>8.52670</td>\n",
       "      <td>12.60940</td>\n",
       "      <td>3990.16630</td>\n",
       "      <td>0.11886</td>\n",
       "      <td>24.68700</td>\n",
       "      <td>5352.15740</td>\n",
       "      <td>8.03920</td>\n",
       "      <td>1142.90446</td>\n",
       "      <td>1.31950</td>\n",
       "      <td>4.23130</td>\n",
       "      <td>214138.85740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4859.01902</td>\n",
       "      <td>43.58759</td>\n",
       "      <td>0.83951</td>\n",
       "      <td>21.05873</td>\n",
       "      <td>86.24121</td>\n",
       "      <td>28.56092</td>\n",
       "      <td>5.24115</td>\n",
       "      <td>6.77597</td>\n",
       "      <td>200500.26143</td>\n",
       "      <td>0.11903</td>\n",
       "      <td>17.53261</td>\n",
       "      <td>4006.79980</td>\n",
       "      <td>23.83187</td>\n",
       "      <td>1021.51726</td>\n",
       "      <td>1.49360</td>\n",
       "      <td>4.80634</td>\n",
       "      <td>92872.29387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.13686</td>\n",
       "      <td>0.37062</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1910.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>168.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>59174.77803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4169.50000</td>\n",
       "      <td>20.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>41.77488</td>\n",
       "      <td>22.76983</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>4.00000</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>1974.00000</td>\n",
       "      <td>0.01765</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>1564.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>350.00000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>153872.63394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>8394.50000</td>\n",
       "      <td>36.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>52.51331</td>\n",
       "      <td>32.78126</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>7.00000</td>\n",
       "      <td>13.00000</td>\n",
       "      <td>1977.00000</td>\n",
       "      <td>0.07542</td>\n",
       "      <td>25.00000</td>\n",
       "      <td>5285.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>900.00000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>3.00000</td>\n",
       "      <td>192269.64488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>12592.50000</td>\n",
       "      <td>75.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>65.90063</td>\n",
       "      <td>45.12880</td>\n",
       "      <td>9.00000</td>\n",
       "      <td>12.00000</td>\n",
       "      <td>17.00000</td>\n",
       "      <td>2001.00000</td>\n",
       "      <td>0.19578</td>\n",
       "      <td>36.00000</td>\n",
       "      <td>7227.00000</td>\n",
       "      <td>5.00000</td>\n",
       "      <td>1548.00000</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>249135.46217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>16798.00000</td>\n",
       "      <td>209.00000</td>\n",
       "      <td>19.00000</td>\n",
       "      <td>641.06519</td>\n",
       "      <td>7480.59213</td>\n",
       "      <td>2014.00000</td>\n",
       "      <td>42.00000</td>\n",
       "      <td>117.00000</td>\n",
       "      <td>20052011.00000</td>\n",
       "      <td>0.52187</td>\n",
       "      <td>74.00000</td>\n",
       "      <td>19083.00000</td>\n",
       "      <td>141.00000</td>\n",
       "      <td>4849.00000</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>23.00000</td>\n",
       "      <td>633233.46657</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Id  DistrictId       Rooms      Square  LifeSquare  \\\n",
       "count 10000.00000 10000.00000 10000.00000 10000.00000  7887.00000   \n",
       "mean   8383.40770    50.40080     1.89050    56.31578    37.19964   \n",
       "std    4859.01902    43.58759     0.83951    21.05873    86.24121   \n",
       "min       0.00000     0.00000     0.00000     1.13686     0.37062   \n",
       "25%    4169.50000    20.00000     1.00000    41.77488    22.76983   \n",
       "50%    8394.50000    36.00000     2.00000    52.51331    32.78126   \n",
       "75%   12592.50000    75.00000     2.00000    65.90063    45.12880   \n",
       "max   16798.00000   209.00000    19.00000   641.06519  7480.59213   \n",
       "\n",
       "       KitchenSquare       Floor  HouseFloor      HouseYear   Ecology_1  \\\n",
       "count    10000.00000 10000.00000 10000.00000    10000.00000 10000.00000   \n",
       "mean         6.27330     8.52670    12.60940     3990.16630     0.11886   \n",
       "std         28.56092     5.24115     6.77597   200500.26143     0.11903   \n",
       "min          0.00000     1.00000     0.00000     1910.00000     0.00000   \n",
       "25%          1.00000     4.00000     9.00000     1974.00000     0.01765   \n",
       "50%          6.00000     7.00000    13.00000     1977.00000     0.07542   \n",
       "75%          9.00000    12.00000    17.00000     2001.00000     0.19578   \n",
       "max       2014.00000    42.00000   117.00000 20052011.00000     0.52187   \n",
       "\n",
       "         Social_1    Social_2    Social_3  Healthcare_1  Helthcare_2  \\\n",
       "count 10000.00000 10000.00000 10000.00000    5202.00000  10000.00000   \n",
       "mean     24.68700  5352.15740     8.03920    1142.90446      1.31950   \n",
       "std      17.53261  4006.79980    23.83187    1021.51726      1.49360   \n",
       "min       0.00000   168.00000     0.00000       0.00000      0.00000   \n",
       "25%       6.00000  1564.00000     0.00000     350.00000      0.00000   \n",
       "50%      25.00000  5285.00000     2.00000     900.00000      1.00000   \n",
       "75%      36.00000  7227.00000     5.00000    1548.00000      2.00000   \n",
       "max      74.00000 19083.00000   141.00000    4849.00000      6.00000   \n",
       "\n",
       "          Shops_1        Price  \n",
       "count 10000.00000  10000.00000  \n",
       "mean      4.23130 214138.85740  \n",
       "std       4.80634  92872.29387  \n",
       "min       0.00000  59174.77803  \n",
       "25%       1.00000 153872.63394  \n",
       "50%       3.00000 192269.64488  \n",
       "75%       6.00000 249135.46217  \n",
       "max      23.00000 633233.46657  "
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_means = train.describe()\n",
    "train_means = train_means.fillna(train_means.mean())\n",
    "train_means\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Очень сильно смущает признак \"год постройки дома\", там какие-то, видимо, лютые выбросы. Также непонятно в чём измеряется признак \"экология_2\"."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Задание 2. Посчитать для каждого признака, сколько в нем уникальных значений и как часто они встречаются. Сделать выводы по каждому признаку.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id               10000\n",
       "DistrictId         205\n",
       "Rooms                9\n",
       "Square           10000\n",
       "LifeSquare        7887\n",
       "KitchenSquare       58\n",
       "Floor               33\n",
       "HouseFloor          44\n",
       "HouseYear           97\n",
       "Ecology_1          129\n",
       "Ecology_2            2\n",
       "Ecology_3            2\n",
       "Social_1            51\n",
       "Social_2           142\n",
       "Social_3            30\n",
       "Healthcare_1        79\n",
       "Helthcare_2          7\n",
       "Shops_1             16\n",
       "Shops_2              2\n",
       "Price            10000\n",
       "dtype: int64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Id               10000\n",
    "DistrictId         205 - вероятно 205 выбросов из 10000. Думаю, это не так много.\n",
    "Rooms                9 - тут либо выброс, либо у нас 9 многокомнатных особняков.\n",
    "Square           10000- либо в городе орудует огромное количество замерщиков, которые меряют каждый со своей линейкой, либо нам необходимо уменьшить количество знаков после запятой, потому как наверняка есть типовые квадратуры домов.\n",
    "LifeSquare        7887 - тут аналогично, с той лишь разницей, что жилая площадь немного ближе к каким-то стандартам.\n",
    "KitchenSquare       58 - вот этот признак вызывает меньше опасений - кухни держутся в \"толпе\"\n",
    "Floor               33 - вероятно, имеют место многоэтажки, либо цоколи\n",
    "HouseFloor          44 - аналогично\n",
    "HouseYear           97 - старый фонд. Возможно он объясняет небольшое количество уникальных значений комнат, больших (или очень маленьких кухонь)\n",
    "Ecology_1          129 ---\n",
    "Ecology_2            2 --- \n",
    "Ecology_3            2 ---\n",
    "Social_1            51 ---\n",
    "Social_2           142 ---\n",
    "Social_3            30 ---\n",
    "Healthcare_1        79 ---\n",
    "Helthcare_2          7 --- \n",
    "Shops_1             16 ---\n",
    "Shops_2              2 ---  все эти признаки, вероятно интегральные. Возможно много знаков после запятой. Также я обратил внимание на буквенные значения. Либо выбросы, либо я пошёл искать легенду этих данных.\n",
    "Price            10000 - тут вопросов нет. Если мы имеем в оценке квартиры столько параметров, у которых знаки после запятой, то тут знаков будет ещё больше. \n",
    "dtype: int64"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Используя выводы из двух предыдущих заданий, найдите те наблюдения, где есть пропуски, выбросы (неадекватные значения признака, которые отличаются от большинства), используя фильтрацию из pandas.\n",
    "Пропуски я изначально заменил на средние. К сожалению, не успел разобраться как фильтровать выбросы."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
